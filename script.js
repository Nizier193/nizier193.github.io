// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥—Ä–∞—Ñ–∞
const config = {
    width: window.innerWidth,
    height: window.innerHeight - 140, // –í—ã—á–∏—Ç–∞–µ–º –≤—ã—Å–æ—Ç—É header –∏ footer
    centerForce: 0.2,
    repelForce: -300,
    linkDistance: 100,
    alphaDecay: 0.01,
    velocityDecay: 0.4
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let svg, g, simulation, nodes, links;
let selectedNode = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', async function() {
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        const data = await loadData();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥—Ä–∞—Ñ
        initGraph();
        
        // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ —Å –¥–∞–Ω–Ω—ã–º–∏
        createGraph(data);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        setupEventListeners();
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        showError(`–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: ${error.message}`);
    }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞
async function loadData() {
    try {
        const response = await fetch('data.json');
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return await response.json();
    } catch (error) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å data.json, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', error);
        // Fallback –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª—É—á–∞—è –ø—Ä—è–º–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
        return getEmbeddedData();
    }
}

// –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ fallback
function getEmbeddedData() {
    return {
        "nodes": [
            {
                "id": "nikita",
                "name": "–ù–∏–∫–∏—Ç–∞ –ë–æ—Ä–∏—Å–æ–≤ | Nizier193",
                "size": 35,
                "color": "#3498db",
                "text": "# –ù–∏–∫–∏—Ç–∞ –ë–æ—Ä–∏—Å–æ–≤ | Nizier193\n\n**17-–ª–µ—Ç–Ω–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞**\n\nüéì –°—Ç—É–¥–µ–Ω—Ç Machine Learning –≤ HSE\nüíª –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ Python, ML –∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\nüèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å —Ö–∞–∫–∞—Ç–æ–Ω–æ–≤\n\n---\n\n### –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n- ü•á 1-–µ –º–µ—Å—Ç–æ –≤ AI-Arrow Hackathon\n- ü•à 2-–µ –º–µ—Å—Ç–æ –≤ Digital Breakthrough\n- üìä –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –≤ –æ–±–ª–∞—Å—Ç–∏ CNN –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π —Ä–∞—Å—Ç–µ–Ω–∏–π\n\n### –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n- **Telegram:** [@Nizier193](https://t.me/Nizier193)\n- **GitHub:** [Nizier193](https://github.com/Nizier193)",
                "x": 0,
                "y": 0,
                "fixed": true
            },
            {
                "id": "education",
                "name": "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
                "size": 25,
                "color": "#e74c3c",
                "text": "# üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n\n## –¢–µ–∫—É—â–µ–µ –æ–±—É—á–µ–Ω–∏–µ:\n**HSE ML School (SPb)** - –û–∫—Ç—è–±—Ä—å 2024 - –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è\n- –ò–∑—É—á–µ–Ω–∏–µ Machine Learning\n- –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã\n- –†–∞–±–æ—Ç–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏\n\n## –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã:\n\n### AI-Arrow Bootcamp (Senior Track)\n*–ò—é–ª—å 2024 - –ê–≤–≥—É—Å—Ç 2024*\n- –•–∞–∫–∞—Ç–æ–Ω-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ML –±—É—Ç–∫–µ–º–ø\n- –†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –Ω–∞–¥ —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏\n\n### Yandex Lyceum: Data Science\n*–Ø–Ω–≤–∞—Ä—å 2024 - –ê–ø—Ä–µ–ª—å 2024* | **–° –æ—Ç–ª–∏—á–∏–µ–º**\n- Pandas, Scipy\n- –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö\n- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n### Yandex Lyceum: Machine Learning  \n*–°–µ–Ω—Ç—è–±—Ä—å 2023 - –î–µ–∫–∞–±—Ä—å 2023* | **–° –æ—Ç–ª–∏—á–∏–µ–º**\n- CNN, YOLO, Classic ML\n- Numpy, Matplotlib\n- –ü—Ä–æ–µ–∫—Ç: –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è CT —Å–∫–∞–Ω–æ–≤",
                "parent": "nikita"
            },
            {
                "id": "projects",
                "name": "–ü—Ä–æ–µ–∫—Ç—ã",
                "size": 25,
                "color": "#f39c12",
                "text": "# üíª –ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã\n\n## –ì–ª–∞–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n\n### üèÜ Viral Clip Maker\n**2-–µ –º–µ—Å—Ç–æ –≤ Digital Breakthrough**\n- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—É—Å–Ω—ã—Ö –≤–∏–¥–µ–æ\n- OpenAI Vision + GPT-4\n- MoviePy, FastAPI, FFmpeg\n\n### üéÆ AI-Arrow: D&D Environment\n**1-–µ –º–µ—Å—Ç–æ –≤ Dungeons And Dragons Hackathon**\n- LLM –∫–∞–∫ –∏–≥—Ä–æ–∫–∏ –∏ Dungeon Master\n- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –º—É–∑—ã–∫–∏\n- Streamlit, AsyncIO\n\n### üé´ Automatic Ticket Dispatching\n**2-–µ –º–µ—Å—Ç–æ –≤ —Ö–∞–∫–∞—Ç–æ–Ω–µ**\n- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–æ–∫ –ø–µ—Ä–≤–æ–π –ª–∏–Ω–∏–∏\n- GPT-3.5, spaCy, PostgreSQL\n\n### üå± CNN –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –±–æ–ª–µ–∑–Ω–µ–π —Ä–∞—Å—Ç–µ–Ω–∏–π\n- –ù–∞—É—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞ 33 —Å—Ç—Ä–∞–Ω–∏—Ü—ã\n- PyTorch, OpenCV, ResNet\n- –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä CNN\n\n### üéØ Theta Game\n- –ò–≥—Ä–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π —á–∞–Ω–∫–æ–≤ (–∫–∞–∫ –≤ Minecraft)\n- PyGame, PyTMX, NumPy\n- –ß–∞—Å—Ç–∏—Ü—ã, –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã",
                "parent": "nikita"
            },
            {
                "id": "skills",
                "name": "–ù–∞–≤—ã–∫–∏",
                "size": 20,
                "color": "#9b59b6",
                "text": "# üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏\n\n## –Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è:\n- **Python** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n- **JavaScript** ‚≠ê‚≠ê‚≠ê‚≠ê\n- **HTML/CSS** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n## Machine Learning:\n- **PyTorch** ‚≠ê‚≠ê‚≠ê‚≠ê\n- **OpenCV** ‚≠ê‚≠ê‚≠ê‚≠ê\n- **Pandas/NumPy** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n- **Scikit-learn** ‚≠ê‚≠ê‚≠ê‚≠ê\n- **CNN, YOLO** ‚≠ê‚≠ê‚≠ê‚≠ê\n\n## –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞:\n- **FastAPI** ‚≠ê‚≠ê‚≠ê‚≠ê\n- **Streamlit** ‚≠ê‚≠ê‚≠ê‚≠ê\n- **PostgreSQL** ‚≠ê‚≠ê‚≠ê\n- **Docker** ‚≠ê‚≠ê‚≠ê\n\n## –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n- **Git** ‚≠ê‚≠ê‚≠ê‚≠ê\n- **Linux** ‚≠ê‚≠ê‚≠ê\n- **API Design** ‚≠ê‚≠ê‚≠ê‚≠ê",
                "parent": "nikita"
            },
            {
                "id": "team",
                "name": "–ö–æ–º–∞–Ω–¥–∞",
                "size": 20,
                "color": "#1abc9c",
                "text": "# üë• –ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n\n## –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ –∫–æ–º–∞–Ω–¥–µ:\n\n### –•–∞–∫–∞—Ç–æ–Ω—ã:\n- **Digital Breakthrough** - –∫–æ–º–∞–Ω–¥–∞ –∏–∑ 4 —á–µ–ª–æ–≤–µ–∫\n- **AI-Arrow Bootcamp** - —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n- **Ticket Dispatching** - –∫–æ–º–∞–Ω–¥–∞ –∏–∑ 3 —á–µ–ª–æ–≤–µ–∫\n\n### –†–æ–ª–∏ –≤ –∫–æ–º–∞–Ω–¥–µ:\n- üß† **Technical Lead** - –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ä–µ—à–µ–Ω–∏–π\n- üíª **Backend Developer** - API –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã\n- ü§ñ **ML Engineer** - –º–æ–¥–µ–ª–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n\n### –ù–∞–≤—ã–∫–∏:\n- Agile –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏\n- Git flow –∏ code review\n- –î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞\n- –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n- –ú–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ –º–ª–∞–¥—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n\n### –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n- –õ–∏–¥–µ—Ä—Å—Ç–≤–æ –≤ 3 –ø—Ä–∏–∑–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö\n- –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n- –£—Å–ø–µ—à–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è ML –≤ –ø—Ä–æ–¥—É–∫—Ç—ã",
                "parent": "nikita"
            },
            {
                "id": "hse",
                "name": "HSE ML School",
                "size": 15,
                "color": "#e67e22",
                "text": "# üéì HSE ML School (SPb)\n\n**–û–∫—Ç—è–±—Ä—å 2024 - –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è**\n\n## –û –ø—Ä–æ–≥—Ä–∞–º–º–µ:\n–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏–∑—É—á–µ–Ω–∏—è –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –æ—Ç –í—ã—Å—à–µ–π —à–∫–æ–ª—ã —ç–∫–æ–Ω–æ–º–∏–∫–∏ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ.\n\n## –ò–∑—É—á–∞–µ–º—ã–µ —Ç–µ–º—ã:\n- –ì–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ\n- –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ\n- –û–±—Ä–∞–±–æ—Ç–∫–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞\n- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã\n- MLOps –∏ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–∏—Å—Ç–µ–º—ã\n\n## –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã:\n- –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n- –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–æ–≤\n- –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä—è–¥—ã\n- A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n## –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n- –£–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ ML –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤\n- –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏\n- –ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏",
                "parent": "education"
            },
            {
                "id": "yandex",
                "name": "Yandex Lyceum",
                "size": 15,
                "color": "#e67e22",
                "text": "# üéì Yandex Lyceum\n\n## Data Science Course\n**–Ø–Ω–≤–∞—Ä—å 2024 - –ê–ø—Ä–µ–ª—å 2024** | **–° –æ—Ç–ª–∏—á–∏–µ–º**\n\n### –ò–∑—É—á–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:\n- **Pandas** - –∞–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n- **Scipy** - —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã\n- **Matplotlib/Seaborn** - –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è\n- **NumPy** - —á–∏—Å–ª–µ–Ω–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è\n\n### –ü—Ä–æ–µ–∫—Ç—ã:\n- –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞\n- –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è\n- A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n---\n\n## Machine Learning Course\n**–°–µ–Ω—Ç—è–±—Ä—å 2023 - –î–µ–∫–∞–±—Ä—å 2023** | **–° –æ—Ç–ª–∏—á–∏–µ–º**\n\n### –ò–∑—É—á–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:\n- **CNN** - —Å–≤–µ—Ä—Ç–æ—á–Ω—ã–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏\n- **YOLO** - –¥–µ—Ç–µ–∫—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤\n- **Classic ML** - —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã\n- **PyTorch** - –≥–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ\n\n### –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç:\n**–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è CT —Å–∫–∞–Ω–æ–≤**\n- –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã: CNN, UNet, ResNet-52\n- –¢–æ—á–Ω–æ—Å—Ç—å: 94%\n- –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
                "parent": "education"
            },
            {
                "id": "python_course",
                "name": "Code of the Future",
                "size": 12,
                "color": "#e67e22",
                "text": "# üêç Python Programming Course\n**\"Code of the Future\"**\n\n**–°–µ–Ω—Ç—è–±—Ä—å 2022 - –ê–≤–≥—É—Å—Ç 2023** | **–õ—É—á—à–∏–π —Å—Ç—É–¥–µ–Ω—Ç –∫—É—Ä—Å–∞**\n\n## –û—Å–≤–æ–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:\n- **OOP** - –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n- **FastAPI** - —Å–æ–∑–¥–∞–Ω–∏–µ REST API\n- **PyTelegramBotAPI** - –±–æ—Ç—ã –¥–ª—è Telegram\n- **PyGame** - —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä\n- **SQLite/PostgreSQL** - —Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö\n\n## –ü—Ä–æ–µ–∫—Ç—ã –∫—É—Ä—Å–∞:\n1. **–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã** - –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ –∏ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n2. **–í–µ–±-–ø–∞—Ä—Å–µ—Ä—ã** - —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–æ–≤\n3. **–ò–≥—Ä–∞ —Å —á–∞–Ω–∫–∞–º–∏** - —Å–∏—Å—Ç–µ–º–∞ –∫–∞–∫ –≤ Minecraft\n4. **–ü—Ä–æ—Ç–æ—Ç–∏–ø —Å–æ—Ü—Å–µ—Ç–∏** - –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞\n\n## –†–µ–∑—É–ª—å—Ç–∞—Ç:\n- –¢–≤–µ—Ä–¥–∞—è –±–∞–∑–∞ –≤ Python\n- –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ü–û\n- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å API\n- –ù–∞–≤—ã–∫–∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ë–î",
                "parent": "education"
            }
        ],
        "links": [
            {
                "source": "nikita",
                "target": "education"
            },
            {
                "source": "nikita", 
                "target": "projects"
            },
            {
                "source": "nikita",
                "target": "skills"
            },
            {
                "source": "nikita",
                "target": "team"
            },
            {
                "source": "education",
                "target": "hse"
            },
            {
                "source": "education",
                "target": "yandex"
            },
            {
                "source": "education",
                "target": "python_course"
            }
        ]
    };
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SVG –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
function initGraph() {
    svg = d3.select('#graph-svg')
        .attr('width', config.width)
        .attr('height', config.height);

    // –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—É –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
    g = svg.append('g');

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–∞–Ω–æ—Ä–∞–º–∏—Ä–æ–≤–∞–Ω–∏—è
    const zoom = d3.zoom()
        .scaleExtent([0.1, 4])
        .on('zoom', function(event) {
            g.attr('transform', event.transform);
        });

    svg.call(zoom);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—à—Ç–∞–±
    svg.call(zoom.transform, d3.zoomIdentity.scale(0.8).translate(config.width/2, config.height/2));

    // –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –¥–ª—è —É–∑–ª–æ–≤
    addGradients();
}

// –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –∫—Ä–∞—Å–∏–≤—ã—Ö —É–∑–ª–æ–≤
function addGradients() {
    const defs = svg.append('defs');
    
    const colors = ['#3498db', '#e74c3c', '#f39c12', '#9b59b6', '#1abc9c', '#e67e22'];
    
    colors.forEach((color, i) => {
        const gradient = defs.append('radialGradient')
            .attr('id', `gradient-${i}`)
            .attr('cx', '30%')
            .attr('cy', '30%');
            
        gradient.append('stop')
            .attr('offset', '0%')
            .attr('stop-color', d3.rgb(color).brighter(0.5));
            
        gradient.append('stop')
            .attr('offset', '100%')
            .attr('stop-color', color);
    });
}

// –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∞
function createGraph(data) {
    nodes = [...data.nodes];
    links = data.links.map(link => ({...link}));

    // –°–æ–∑–¥–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é —Ñ–∏–∑–∏–∫–∏
    simulation = d3.forceSimulation(nodes)
        .force('link', d3.forceLink(links).id(d => d.id).distance(config.linkDistance))
        .force('charge', d3.forceManyBody().strength(config.repelForce))
        .force('center', d3.forceCenter(0, 0).strength(config.centerForce))
        .force('collision', d3.forceCollide().radius(d => getNodeRadius(d) + 5))
        .alphaDecay(config.alphaDecay)
        .velocityDecay(config.velocityDecay);

    // –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∏
    const link = g.append('g')
        .attr('class', 'links')
        .selectAll('line')
        .data(links)
        .enter().append('line')
        .attr('class', 'link');

    // –°–æ–∑–¥–∞–µ–º —É–∑–ª—ã
    const nodeGroup = g.append('g')
        .attr('class', 'nodes')
        .selectAll('g')
        .data(nodes)
        .enter().append('g')
        .attr('class', 'node-group')
        .call(d3.drag()
            .on('start', dragStarted)
            .on('drag', dragged)
            .on('end', dragEnded));

    // –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä—É–∂–∫–∏ –¥–ª—è —É–∑–ª–æ–≤
    const node = nodeGroup.append('circle')
        .attr('class', 'node')
        .attr('r', getNodeRadius)
        .attr('fill', (d, i) => `url(#gradient-${i % 6})`)
        .attr('stroke', d => d3.rgb(d.color).darker())
        .attr('stroke-width', 2)
        .on('click', handleNodeClick)
        .on('mouseover', handleNodeHover)
        .on('mouseout', handleNodeOut);

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∏ –∫ —É–∑–ª–∞–º
    const labels = nodeGroup.append('text')
        .attr('class', 'node-label')
        .attr('dy', d => getNodeRadius(d) + 15)
        .style('font-size', d => d.id === 'nikita' ? '14px' : '12px')
        .style('font-weight', d => d.id === 'nikita' ? '600' : '500')
        .text(d => d.name);

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –Ω–∞ –∫–∞–∂–¥–æ–º —Ç–∏–∫–µ —Å–∏–º—É–ª—è—Ü–∏–∏
    simulation.on('tick', () => {
        link
            .attr('x1', d => d.source.x)
            .attr('y1', d => d.source.y)
            .attr('x2', d => d.target.x)
            .attr('y2', d => d.target.y);

        nodeGroup
            .attr('transform', d => `translate(${d.x},${d.y})`);
    });

    // –§–∏–∫—Å–∏—Ä—É–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —É–∑–µ–ª
    const centerNode = nodes.find(n => n.id === 'nikita');
    if (centerNode) {
        centerNode.fx = 0;
        centerNode.fy = 0;
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–¥–∏—É—Å–∞ —É–∑–ª–∞
function getNodeRadius(d) {
    return d.size || 15;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
function dragStarted(event, d) {
    if (!event.active) simulation.alphaTarget(0.3).restart();
    d.fx = d.x;
    d.fy = d.y;
}

function dragged(event, d) {
    d.fx = event.x;
    d.fy = event.y;
}

function dragEnded(event, d) {
    if (!event.active) simulation.alphaTarget(0);
    // –ù–µ –æ—Ç–ø—É—Å–∫–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —É–∑–µ–ª
    if (d.id !== 'nikita') {
        d.fx = null;
        d.fy = null;
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —É–∑–ª—É
function handleNodeClick(event, d) {
    event.stopPropagation();
    
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —É–∑–ª–∞
    d3.selectAll('.node').classed('selected', false);
    d3.selectAll('.link').classed('highlighted', false);
    
    // –í—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª
    d3.select(this).classed('selected', true);
    selectedNode = d;
    
    // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–≤—è–∑–∏
    d3.selectAll('.link')
        .classed('highlighted', link => 
            link.source.id === d.id || link.target.id === d.id
        );
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ sidebar
    showNodeInfo(d);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ —É–∑–µ–ª
function handleNodeHover(event, d) {
    d3.select(this)
        .transition()
        .duration(200)
        .attr('r', getNodeRadius(d) * 1.2);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º tooltip
    showTooltip(event, d);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Ö–æ–¥–∞ –∫—É—Ä—Å–æ—Ä–∞ —Å —É–∑–ª–∞
function handleNodeOut(event, d) {
    d3.select(this)
        .transition()
        .duration(200)
        .attr('r', getNodeRadius(d));
    
    // –°–∫—Ä—ã–≤–∞–µ–º tooltip
    hideTooltip();
}

// –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–∑–ª–µ –≤ sidebar
function showNodeInfo(node) {
    const sidebar = document.getElementById('sidebar');
    const content = document.getElementById('sidebar-content');
    
    // –†–µ–Ω–¥–µ—Ä–∏–º markdown –≤ HTML
    const htmlContent = marked.parse(node.text || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —É–∑–ª–∞.');
    
    content.innerHTML = htmlContent;
    sidebar.classList.add('open');
}

// –°–∫—Ä—ã—Ç–∏–µ sidebar
function hideSidebar() {
    const sidebar = document.getElementById('sidebar');
    sidebar.classList.remove('open');
    
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
    d3.selectAll('.node').classed('selected', false);
    d3.selectAll('.link').classed('highlighted', false);
    selectedNode = null;
}

// –ü–æ–∫–∞–∑ tooltip
function showTooltip(event, d) {
    // –°–æ–∑–¥–∞–µ–º tooltip –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    let tooltip = d3.select('body').select('.tooltip');
    if (tooltip.empty()) {
        tooltip = d3.select('body').append('div')
            .attr('class', 'tooltip')
            .style('position', 'absolute')
            .style('background', 'rgba(0, 0, 0, 0.9)')
            .style('color', 'white')
            .style('padding', '8px 12px')
            .style('border-radius', '4px')
            .style('font-size', '12px')
            .style('pointer-events', 'none')
            .style('opacity', 0)
            .style('z-index', 1000);
    }
    
    tooltip.html(`<strong>${d.name}</strong><br/>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π`)
        .style('left', (event.pageX + 10) + 'px')
        .style('top', (event.pageY - 10) + 'px')
        .transition()
        .duration(200)
        .style('opacity', 1);
}

// –°–∫—Ä—ã—Ç–∏–µ tooltip
function hideTooltip() {
    d3.select('.tooltip')
        .transition()
        .duration(200)
        .style('opacity', 0);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è sidebar
    document.getElementById('close-sidebar').addEventListener('click', hideSidebar);
    
    // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –º–∞—Å—à—Ç–∞–±–∞
    document.getElementById('reset-zoom').addEventListener('click', resetZoom);
    
    // –ö–Ω–æ–ø–∫–∞ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
    document.getElementById('center-graph').addEventListener('click', centerGraph);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ sidebar –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–æ–Ω
    svg.on('click', function(event) {
        if (event.target === this) {
            hideSidebar();
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', handleResize);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ sidebar –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Escape
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            hideSidebar();
        }
    });
}

// –°–±—Ä–æ—Å –º–∞—Å—à—Ç–∞–±–∞
function resetZoom() {
    const zoom = d3.zoom();
    svg.transition()
        .duration(750)
        .call(zoom.transform, d3.zoomIdentity.scale(0.8).translate(config.width/2, config.height/2));
}

// –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∞
function centerGraph() {
    if (simulation) {
        simulation.alpha(0.3).restart();
        
        // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–∏–ª—ã
        simulation
            .force('center', d3.forceCenter(0, 0).strength(0.3))
            .alpha(0.3)
            .restart();
        
        setTimeout(() => {
            simulation.force('center', d3.forceCenter(0, 0).strength(config.centerForce));
        }, 1000);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
function handleResize() {
    const newWidth = window.innerWidth;
    const newHeight = window.innerHeight - 140;
    
    config.width = newWidth;
    config.height = newHeight;
    
    svg.attr('width', newWidth)
       .attr('height', newHeight);
    
    if (simulation) {
        simulation.force('center', d3.forceCenter(0, 0));
    }
}

// –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
function showError(message) {
    const sidebar = document.getElementById('sidebar');
    const content = document.getElementById('sidebar-content');
    
    content.innerHTML = `
        <div style="color: #e74c3c; text-align: center; padding: 20px;">
            <h3>‚ö†Ô∏è –û—à–∏–±–∫–∞</h3>
            <p>${message}</p>
        </div>
    `;
    
    sidebar.classList.add('open');
}

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.graphDebug = {
    getNodes: () => nodes,
    getLinks: () => links,
    getSimulation: () => simulation,
    getSelectedNode: () => selectedNode,
    centerNode: (nodeId) => {
        const node = nodes.find(n => n.id === nodeId);
        if (node) {
            node.fx = 0;
            node.fy = 0;
            simulation.alpha(0.3).restart();
        }
    }
};

console.log('–ì—Ä–∞—Ñ–∏–∫ –∑–Ω–∞–Ω–∏–π –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!'); 