// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫ –ª–æ–∫–∞–ª—å–Ω–æ
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node download-libs.js

const https = require('https');
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫
const libsDir = './libs';
if (!fs.existsSync(libsDir)) {
    fs.mkdirSync(libsDir);
    console.log('üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ libs/');
}

// –°–ø–∏—Å–æ–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
const libraries = [
    {
        name: 'D3.js v7',
        url: 'https://d3js.org/d3.v7.min.js',
        filename: 'd3.min.js'
    },
    {
        name: 'Marked.js',
        url: 'https://cdn.jsdelivr.net/npm/marked/marked.min.js',
        filename: 'marked.min.js'
    }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
function downloadFile(url, filepath, libraryName) {
    return new Promise((resolve, reject) => {
        console.log(`üì• –°–∫–∞—á–∏–≤–∞–µ–º ${libraryName}...`);
        
        const file = fs.createWriteStream(filepath);
        
        https.get(url, (response) => {
            if (response.statusCode === 200) {
                response.pipe(file);
                
                file.on('finish', () => {
                    file.close();
                    const stats = fs.statSync(filepath);
                    const sizeKB = Math.round(stats.size / 1024);
                    console.log(`‚úÖ ${libraryName} —Å–∫–∞—á–∞–Ω–∞ (${sizeKB} KB)`);
                    resolve();
                });
            } else {
                file.close();
                fs.unlink(filepath, () => {}); // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
                reject(new Error(`HTTP ${response.statusCode} –¥–ª—è ${url}`));
            }
        }).on('error', (err) => {
            file.close();
            fs.unlink(filepath, () => {}); // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
            reject(err);
        });
    });
}

// –°–∫–∞—á–∏–≤–∞–µ–º –≤—Å–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
async function downloadAllLibraries() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫...\n');
    
    for (const lib of libraries) {
        const filepath = path.join(libsDir, lib.filename);
        
        try {
            await downloadFile(lib.url, filepath, lib.name);
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è ${lib.name}:`, error.message);
            
            // –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ URL
            if (lib.filename === 'd3.min.js') {
                console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è D3.js...');
                try {
                    await downloadFile(
                        'https://cdn.jsdelivr.net/npm/d3@7/dist/d3.min.js',
                        filepath,
                        'D3.js (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π URL)'
                    );
                } catch (altError) {
                    console.error('‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Ç–æ–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                }
            }
        }
    }
    
    console.log('\nüéâ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìñ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:');
    console.log('   - index.html (–æ–±—ã—á–Ω–∞—è –≤–µ—Ä—Å–∏—è)');
    console.log('   - index-offline.html (–≤–µ—Ä—Å–∏—è —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏)');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ —Ñ–∞–π–ª—ã —Å–∫–∞—á–∞–ª–∏—Å—å
    let allDownloaded = true;
    for (const lib of libraries) {
        const filepath = path.join(libsDir, lib.filename);
        if (!fs.existsSync(filepath) || fs.statSync(filepath).size < 1000) {
            console.log(`‚ö†Ô∏è  ${lib.name} –Ω–µ —Å–∫–∞—á–∞–Ω–∞ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞`);
            allDownloaded = false;
        }
    }
    
    if (allDownloaded) {
        console.log('\n‚úÖ –í—Å–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω—ã!');
        console.log('üåê –¢–µ–ø–µ—Ä—å —Å–∞–π—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞!');
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
downloadAllLibraries().catch(console.error); 